{% render 'section-padding', id: section.id, padding_top: section.settings.padding_top, padding_bottom: section.settings.padding_bottom %}

<div class="section-{{ section.id }}-padding bg-light-surface">
    <div class="container">
        <product-recommendations
                data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit={{ section.settings.products_to_show }}">
            {% if recommendations.performed and recommendations.products_count > 0 %}
                <h2 class="mb-32 h3">{{ section.settings.heading | escape }}</h2>
                <ul class="grid grid-cols-2 lg:grid-cols-{{ section.settings.columns_desktop }} gap-y-32 gap-x-12 md:gap-32"
                    role="list">
                    {% for recommendation in recommendations.products %}
                        <li class="js-grid-item">
                            {% render 'card-product',
                                    card_product: recommendation,
                                    show_vendor: section.settings.show_vendor,
                                    show_secondary_image: section.settings.show_secondary_image,
                                    show_stock_state: section.settings.show_stock_state,
                                    button: section.settings.product_hover_button,
                                    section_id: recommendation.id,
                                    section: section
                            %}
                        </li>
                    {% endfor %}
                </ul>
            {% endif %}
        </product-recommendations>
    </div>
</div>

{% javascript %}
class ProductRecommendations extends HTMLElement {
    constructor() {
        super();

const handleIntersection = (entries, observer) => {
        if (!entries[0].isIntersecting) return;
        observer.unobserve(this);

        fetch(this.dataset.url)
            .then(response => response.text())
            .then(text => {
                const html = document.createElement('div');
                html.innerHTML = text;
                const recommendations = html.querySelector('product-recommendations');

                if (recommendations && recommendations.innerHTML.trim().length) {
                    this.innerHTML = recommendations.innerHTML;
                }

                if (html.querySelector('.js-grid-item')) {
                    this.classList.add('product-recommendations--loaded');
                }
            })
            .catch(e => {
                console.error(e);
            });
        }
        new IntersectionObserver(handleIntersection.bind(this), {rootMargin: '0px 0px 200px 0px'}).observe(this);
    }
}

customElements.define('product-recommendations', ProductRecommendations);
{% endjavascript %}

{% schema %}
{
  "name": "t:sections.product-recommendations.name",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "paragraph",
      "content": "t:sections.product-recommendations.settings.paragraph__1.content"
    },
    {
      "type": "text",
      "id": "heading",
      "default": "You may also like",
      "label": "t:sections.product-recommendations.settings.heading.label"
    },
    {
      "type": "range",
      "id": "products_to_show",
      "min": 2,
      "max": 10,
      "step": 1,
      "default": 4,
      "label": "t:sections.product-recommendations.settings.products_to_show.label"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 2,
      "max": 5,
      "step": 1,
      "default": 4,
      "label": "t:sections.product-recommendations.settings.columns_desktop.label"
    },
    {
      "type": "header",
      "content": "t:sections.product-recommendations.settings.header__2.content"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "default": false,
      "label": "t:sections.product-recommendations.settings.show_vendor.label"
    },
    {
      "type": "checkbox",
      "id": "show_secondary_image",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.show_secondary_image.label"
    },
    {
      "type": "select",
      "id": "product_hover_button",
      "label": "t:sections.main-collection-product-grid.settings.product_hover_button.label",
      "default": "none",
      "options": [
        {
          "value": "none",
          "label": "t:sections.main-collection-product-grid.settings.product_hover_button.options.none.label"
        },
        {
          "value": "quick_view",
          "label": "t:sections.main-collection-product-grid.settings.product_hover_button.options.options__1.label"
        },
        {
          "value": "quick_buy",
          "label": "t:sections.main-collection-product-grid.settings.product_hover_button.options.options__2.label"
        }
      ]
    },
    {
      "type": "checkbox",
      "id": "show_stock_state",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.show_stock_state.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 200,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 80
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 200,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 80
    }
  ]
}
{% endschema %}
